datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  name  String?
  email String @unique
  image String?
  emailVerified DateTime?
  accounts Account[]
  sessions Session[]
  recipes Recipe[]
  comment Comment[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Recipe {
  id          String   @id @default(cuid())
  title       String
  ingredients String
  instructions String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  categories   Category[] @relation("RecipeCategories")
  comments     Comment[]
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  recipes   Recipe[]  @relation("RecipeCategories")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  recipeId  String
  userId    String
  createdAt DateTime @default(now())

  recipe Recipe @relation(fields: [recipeId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}